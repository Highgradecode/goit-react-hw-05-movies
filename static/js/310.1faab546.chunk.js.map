{"version":3,"file":"static/js/310.1faab546.chunk.js","mappings":"mTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAJY,oCAOT,IAAMC,EAAgB,mCAAG,+GAEDF,EAAAA,EAAAA,IAAU,wBAFT,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,yDAKjBC,QAAQC,IAAR,uCALiB,yDAAH,qDAShBC,EAAmB,mCAAG,WAAOC,GAAP,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,IAFhB,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,yDAKpBC,QAAQC,IAAR,uCALoB,yDAAH,sDASnBG,EAAe,mCAAG,WAAOD,GAAP,kGAEAP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFA,uBAEfJ,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,yDAKhBC,QAAQC,IAAR,uCALgB,yDAAH,sDASfI,EAAe,mCAAG,WAAOF,GAAP,kGAEAP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFA,uBAEfJ,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,yDAKhBC,QAAQC,IAAR,uCALgB,yDAAH,sDASfK,EAAc,mCAAG,WAAOC,GAAP,kGAECX,EAAAA,EAAAA,IAAA,gBAA2B,CAC9CY,OAAQ,CACJD,MAAAA,KAJc,uBAEdR,EAFc,EAEdA,KAFc,kBAOfA,GAPe,yDASfC,QAAQC,IAAR,uCATe,yDAAH,qD,qIC3CdQ,E,QAAoBC,QAAAA,GAAH,mN,SCCjBC,EAAa,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAChC,OACI,UAACJ,EAAD,YACI,0CAAgBG,MAChB,uBAAIC,MAGf,EC0BD,EA/BgB,WACZ,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QAER,GAA8BY,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkDF,EAAAA,EAAAA,UAAS,MAA3D,eAAOG,EAAP,KAA0BC,EAA1B,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACNf,EAAAA,EAAAA,IAAgBF,GACXkB,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,EAAQC,OAAS,GAAKN,GAAW,OAAIK,GAAtD,IACLE,OAAM,SAAAC,GAAK,OAAIzB,QAAQC,IAAIwB,EAAhB,IACXC,SAAQ,kBAAOV,GAAWG,EAAqB,4CAAvC,GAEhB,GAAC,CAAChB,IAEEa,GAKD,wBAEQA,EAAQW,KAAI,YAA8B,IAA3Bf,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASe,EAAS,EAATA,GAC5B,OACI,SAACjB,EAAD,CAAqBC,OAAQA,EAAQC,QAASA,GAA7Be,EAExB,OAVF,uBAAIV,GAclB,C","sources":["components/api.js","components/ReviewItem/ReviewItemWrapper.styled.js","components/ReviewItem/ReviewItem.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'bfb089247bb1d6067836437ecb783621';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key : API_KEY\n}\n\nexport const getTrendingMovie = async () => {\n    try {\n        const { data } = await axios.get('/trending/movie/week');\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n};\n\nexport const getMovieDetailsById = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieReviews = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/reviews`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieByName = async (query) => {\n    try {\n        const { data } = await axios.get(`/search/movie`, {\n            params: {\n                query\n            }\n        });\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const ReviewItemWrapper = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 8px;\npadding: 16px;\nborder: 1px solid green;\nborder-radius: 10px;\n:not(:last-child){\n    margin-bottom: 16px;\n}\n`","import PropTypes from 'prop-types'\nimport { ReviewItemWrapper } from \"./ReviewItemWrapper.styled\";\n\nexport const ReviewItem = ({author, content}) => {\n    return (\n        <ReviewItemWrapper>\n            <h3>{`Author: ${author}`}</h3>\n            <p>{content}</p>\n        </ReviewItemWrapper>\n    );\n}\n\nReviewItem.propTypes = {\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n}","import { getMovieReviews } from \"components/api\"\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { ReviewItem } from \"components/ReviewItem/ReviewItem\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n\n    const [reviews, setReviews] = useState(null);\n    const [reviewsNotFounded, setreviewsNotFounded] = useState(null)\n\n    useEffect(() => {\n        getMovieReviews(movieId)\n            .then(({ results }) => results.length > 0 && setReviews([...results]))\n            .catch(error => console.log(error))\n            .finally(() => !reviews && setreviewsNotFounded(\"We don't have any reviews for this movie.\"))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[movieId])\n    \n    if (!reviews) {\n        return <b>{reviewsNotFounded}</b>\n    }\n\n    return (\n        <ul>\n            {\n                reviews.map(({ author, content, id }) => {\n                    return (\n                        <ReviewItem key={id} author={author} content={content} />\n                    )\n                })\n            }\n        </ul>\n    )\n};\n\nexport default Reviews;"],"names":["axios","api_key","getTrendingMovie","data","console","log","getMovieDetailsById","movieId","getMovieCredits","getMovieReviews","getMovieByName","query","params","ReviewItemWrapper","styled","ReviewItem","author","content","useParams","useState","reviews","setReviews","reviewsNotFounded","setreviewsNotFounded","useEffect","then","results","length","catch","error","finally","map","id"],"sourceRoot":""}