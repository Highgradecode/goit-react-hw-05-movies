{"version":3,"file":"static/js/582.76794563.chunk.js","mappings":"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","sources":["components/MoveItem/MovieItemWrapper.styled.js","components/MoveItem/MoveItem.jsx","components/api.js","components/MovieSearchForm/MovieSearchFormWrapper.styled.js","components/MovieSearchForm/MovieSearchForm.jsx","components/Loaders/Loader.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieItemWrapper = styled.li`\n    display: flex;\n    margin-bottom: 8px;\n    font-size: 18px;\n    font-weight: 500;\n\n    :hover,\n    :focus{\n        color: red;\n    }\n    \n`","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { MovieItemWrapper } from \"./MovieItemWrapper.styled\";\n\n\n\nexport const MovieItem = ({ title, id }) => {\n\n    const { pathname, search } = useLocation();\n    \n    return (<MovieItemWrapper><Link to={`/movies/${id}`} state={{comeFromPage: pathname + search}}>{title}</Link></MovieItemWrapper>)\n}\n\nMovieItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}","import axios from \"axios\";\n\nconst API_KEY = 'bfb089247bb1d6067836437ecb783621';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key : API_KEY\n}\n\nexport const getTrendingMovie = async () => {\n    try {\n        const { data } = await axios.get('/trending/movie/week');\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n};\n\nexport const getMovieDetailsById = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieReviews = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/reviews`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieByName = async (query) => {\n    try {\n        const { data } = await axios.get(`/search/movie`, {\n            params: {\n                query\n            }\n        });\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const MovieSearchFormWrapper = styled.form`\ndisplay: flex;\ngap: 8px;\njustify-content: center;\nmargin-bottom: 16px;\ninput{\n    border-radius: 5px;\n}\n\nbutton{\n    padding: 4px;\n    background-color: green;\n    width: 75px;\n    border: 1px solid black;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    color: white;\n\n    :hover,\n    :focus{\n        background-color: red;\n    }\n}\n`","import PropTypes from 'prop-types';\nimport { MovieSearchFormWrapper } from \"./MovieSearchFormWrapper.styled\";\n\nexport const MovieSearchForm = ({ handleSubmit }) => {\n    return (\n        <MovieSearchFormWrapper onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"search\" />\n            <button type=\"submit\">Search</button>\n        </MovieSearchFormWrapper>\n\n    );\n};\n\nMovieSearchForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n}","import { FallingLines } from \"react-loader-spinner\"\n\nexport const Loader = () =>\n<FallingLines\n  color=\"#4fa94d\"\n  width=\"100\"\n  visible={true}\n  ariaLabel='falling-lines-loading'\n/>","import { getMovieByName } from \"components/api\";\nimport { MovieItem } from \"components/MoveItem/MoveItem\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\nimport { MovieSearchForm } from \"components/MovieSearchForm/MovieSearchForm\";\nimport { Loader } from \"components/Loaders/Loader\";\n\nconst Movies = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [findedMoives, setFindedMoives] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const searchQuery = searchParams.get('query') ?? '';\n    \n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.target\n        const query = form.search.value.trim();\n\n        if (query) {\n            setSearchParams({ query })\n        } else {\n            alert('Enter something')\n            setSearchParams({})\n        }\n\n        form.reset()\n    }\n\n    useEffect(() => {\n        if (!searchQuery) {\n            setIsLoaded(true)\n            return\n        }\n        \n        setIsLoaded(false)\n        setFindedMoives([])\n\n        getMovieByName(searchQuery)\n            .then(({ results }) => setFindedMoives([...results]))\n            .catch(error => console.log(error))\n            .finally(() => setIsLoaded(true))\n    }, [searchQuery]);\n\n    \n\n\n\n    return (\n        <>\n            <MovieSearchForm handleSubmit={handleSubmit} />\n\n            {findedMoives && findedMoives.length > 0 &&\n                <ul>\n                    {\n                        findedMoives.map(({ id, title }) => <MovieItem id={id} key={id} title={title} />)\n                    }\n                </ul>\n            }\n\n            {isLoaded && findedMoives && findedMoives.length === 0 && <b>No results</b>}\n\n            {!isLoaded && <Loader/>}\n        </>\n    );\n};\n\nexport default Movies;"],"names":["MovieItemWrapper","styled","MovieItem","title","id","useLocation","pathname","search","to","state","comeFromPage","axios","api_key","getTrendingMovie","data","console","log","getMovieDetailsById","movieId","getMovieCredits","getMovieReviews","getMovieByName","query","params","MovieSearchFormWrapper","MovieSearchForm","handleSubmit","onSubmit","type","name","Loader","color","width","visible","ariaLabel","useSearchParams","searchParams","setSearchParams","useState","findedMoives","setFindedMoives","isLoaded","setIsLoaded","searchQuery","get","useEffect","then","results","catch","error","finally","e","preventDefault","form","target","value","trim","alert","reset","length","map"],"sourceRoot":""}