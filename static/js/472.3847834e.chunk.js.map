{"version":3,"file":"static/js/472.3847834e.chunk.js","mappings":"mTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAJY,oCAOT,IAAMC,EAAgB,mCAAG,+GAEDF,EAAAA,EAAAA,IAAU,wBAFT,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,yDAKjBC,QAAQC,IAAR,uCALiB,yDAAH,qDAShBC,EAAmB,mCAAG,WAAOC,GAAP,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,IAFhB,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,yDAKpBC,QAAQC,IAAR,uCALoB,yDAAH,sDASnBG,EAAe,mCAAG,WAAOD,GAAP,kGAEAP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFA,uBAEfJ,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,yDAKhBC,QAAQC,IAAR,uCALgB,yDAAH,sDASfI,EAAe,mCAAG,WAAOF,GAAP,kGAEAP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFA,uBAEfJ,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,yDAKhBC,QAAQC,IAAR,uCALgB,yDAAH,sDASfK,EAAc,mCAAG,WAAOC,GAAP,kGAECX,EAAAA,EAAAA,IAAA,gBAA2B,CAC9CY,OAAQ,CACJD,MAAAA,KAJc,uBAEdR,EAFc,EAEdA,KAFc,kBAOfA,GAPe,yDASfC,QAAQC,IAAR,uCATe,yDAAH,qD,qIC3CdQ,E,QAAkBC,QAAAA,GAAH,oR,SCEfC,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACI,UAACL,EAAD,YACI,gBAAKM,IAAKD,GAAY,8CAA2CA,GAAgBE,MAAO,IAAKC,OAAQ,IAAKC,IAAKN,KAC/G,4BACgB,wBAAKA,KACrB,4CAAkBC,UAI7B,ECsBD,EA/Ba,WACT,IAAQV,GAAYgB,EAAAA,EAAAA,MAAZhB,QAER,GAAwBiB,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4CF,EAAAA,EAAAA,UAAS,MAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACNrB,EAAAA,EAAAA,IAAgBD,GACXuB,MAAK,gBAAGL,EAAH,EAAGA,KAAH,OAAcA,EAAKM,OAAS,GAAKL,GAAQ,OAAID,GAA7C,IACLO,OAAM,SAAAC,GAAK,OAAI7B,QAAQC,IAAI4B,EAAhB,IACXC,SAAQ,kBAAOT,GAAQG,EAAkB,qBAAjC,GAEhB,GAAE,CAACrB,IAGCkB,GAKD,wBACKA,EAAKU,KAAI,YAA0C,IAAxCnB,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,aAAckB,EAAQ,EAARA,GACvC,OACI,SAACrB,EAAD,CAAmBC,KAAMA,EAAMC,UAAWA,EAAWC,aAAcA,GAApDkB,EAEtB,OATE,uBAAIT,GAalB,C","sources":["components/api.js","components/CastItem/CastItemWrapper.styled.js","components/CastItem/CastItem.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'bfb089247bb1d6067836437ecb783621';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key : API_KEY\n}\n\nexport const getTrendingMovie = async () => {\n    try {\n        const { data } = await axios.get('/trending/movie/week');\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n};\n\nexport const getMovieDetailsById = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/credits`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieReviews = async (movieId) => {\n    try {\n        const { data } = await axios.get(`/movie/${movieId}/reviews`);\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}\n\nexport const getMovieByName = async (query) => {\n    try {\n        const { data } = await axios.get(`/search/movie`, {\n            params: {\n                query\n            }\n        });\n        return data;\n    } catch (error) {\n        return console.log(`Something was wrong: ${error}`);\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const CastItemWrapper = styled.li`\ndisplay: flex;\nalign-items: center;\nwidth: 300px;\nmargin: 0 auto;\npadding: 16px;\nborder: 1px solid green;\nborder-radius: 10px;\n\nimg{\n    border-radius: 5px;\n    margin-right: 30px;\n}\n\n\n\n\n:not(:last-child){\n    margin-bottom: 16px;\n}\n`","import PropTypes from 'prop-types';\n\nimport { CastItemWrapper } from \"./CastItemWrapper.styled\";\n\nexport const CastItem = ({ name, character, profile_path }) => {\n    return (\n        <CastItemWrapper>\n            <img src={profile_path && `https://image.tmdb.org/t/p/original/${profile_path}`} width={100} height={150} alt={name} />\n            <div>\n                            <h3>{name}</h3>\n            <p>{`Character: ${character}`}</p>\n</div>\n        </CastItemWrapper>\n    );\n};\n\nCastItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n}","import { useParams } from \"react-router-dom\";\nimport { getMovieCredits } from \"components/api\";\nimport { useEffect, useState } from \"react\";\nimport { CastItem } from \"components/CastItem/CastItem\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    \n    const [cast, setCast] = useState(null);\n    const [castNotFounded, setCastNotFounded] = useState(null)\n    \n    useEffect(() => {\n        getMovieCredits(movieId)\n            .then(({ cast }) => cast.length > 0 && setCast([...cast]))\n            .catch(error => console.log(error))\n            .finally(() => !cast && setCastNotFounded(\"Actors didn't find\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId])\n\n\n    if (!cast) {\n        return <b>{castNotFounded}</b>\n    }\n\n    return (\n        <ul>\n            {cast.map(({name, character, profile_path, id}) => {\n                return (\n                    <CastItem key={id} name={name} character={character} profile_path={profile_path} />\n                )\n            })}\n        </ul>\n    )\n\n}\n\nexport default Cast;"],"names":["axios","api_key","getTrendingMovie","data","console","log","getMovieDetailsById","movieId","getMovieCredits","getMovieReviews","getMovieByName","query","params","CastItemWrapper","styled","CastItem","name","character","profile_path","src","width","height","alt","useParams","useState","cast","setCast","castNotFounded","setCastNotFounded","useEffect","then","length","catch","error","finally","map","id"],"sourceRoot":""}